import random
import blocks

type
  Mino* = object
    rotateIndex: int
    minoIndex: int
    x*: int
    y*: int
  Mode* = enum
    mEasy, mNormal, mHard

const
  MINO_BLOCK_WIDTH* = 4
  EMPTY_MINO* = 0
  FILLED_MINO1* = 1
  FILLED_MINO2* = 2
  FILLED_MINO3* = 4
  FILLED_MINO4* = 8
  FILLED_MINO5* = 16
  FILLED_MINO6* = 32
  FILLED_MINO7* = 64
  FILLED_MINO8* = 128

  easyMinos* = @[
    @[
      [
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO2, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
    ]
  ]
  normalMinos* = @[
    @[
      [
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO2, FILLED_MINO2, EMPTY_MINO],
        [FILLED_MINO2, FILLED_MINO2, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [EMPTY_MINO, FILLED_MINO2, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO2, FILLED_MINO2, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO2, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
    ],
    @[
      [
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO3, FILLED_MINO3, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO3, FILLED_MINO3],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, FILLED_MINO3],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO3, FILLED_MINO3],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO3, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
    ],
    @[
      [
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO4, EMPTY_MINO, EMPTY_MINO],
        [FILLED_MINO4, FILLED_MINO4, FILLED_MINO4, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [FILLED_MINO4, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [FILLED_MINO4, FILLED_MINO4, EMPTY_MINO, EMPTY_MINO],
        [FILLED_MINO4, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [FILLED_MINO4, FILLED_MINO4, FILLED_MINO4, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO4, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO4, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO4, FILLED_MINO4, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO4, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
    ],
    @[
      [
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO5, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO5, FILLED_MINO5, FILLED_MINO5],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [EMPTY_MINO, FILLED_MINO5, FILLED_MINO5, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO5, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO5, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [EMPTY_MINO, FILLED_MINO5, FILLED_MINO5, FILLED_MINO5],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, FILLED_MINO5],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, FILLED_MINO5],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, FILLED_MINO5],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO5, FILLED_MINO5],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
    ],
    @[
      [
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO6, EMPTY_MINO],
        [FILLED_MINO6, FILLED_MINO6, FILLED_MINO6, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [FILLED_MINO6, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [FILLED_MINO6, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [FILLED_MINO6, FILLED_MINO6, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [FILLED_MINO6, FILLED_MINO6, FILLED_MINO6, EMPTY_MINO],
        [FILLED_MINO6, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [EMPTY_MINO, FILLED_MINO6, FILLED_MINO6, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO6, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO6, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
    ],
    @[
      [ [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO7, FILLED_MINO7, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO7, FILLED_MINO7, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
    ],
    @[
      [
        [EMPTY_MINO, FILLED_MINO8, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO8, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO8, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, FILLED_MINO8, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [FILLED_MINO8, FILLED_MINO8, FILLED_MINO8, FILLED_MINO8],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
      [
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO8, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO8, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO8, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, FILLED_MINO8, EMPTY_MINO],
      ],
      [
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
        [FILLED_MINO8, FILLED_MINO8, FILLED_MINO8, FILLED_MINO8],
        [EMPTY_MINO, EMPTY_MINO, EMPTY_MINO, EMPTY_MINO],
      ],
    ],
  ]

var
  minos = normalMinos

randomize()

proc initMinos*(mode: Mode) =
  minos =
    case mode
    of mEasy: easyMinos
    of mNormal: normalMinos
    of mHard: normalMinos

proc newRandomMino*(): Mino =
  let r = rand(0 .. minos.high)
  return Mino(minoIndex: r, x: 4, y: 0)

proc getBlock*(m: Mino): Block =
  return minos[m.minoIndex][m.rotateIndex]

proc moveRight*(m: var Mino) =
  m.x.inc

proc moveLeft*(m: var Mino) =
  m.x.dec

proc moveDown*(m: var Mino) =
  m.y.inc

proc rotateRight*(m: var Mino) =
  let incedIndex = m.rotateIndex + 1
  m.rotateIndex = if minos[m.minoIndex].len <= incedIndex:
    0
  else:
    incedIndex

proc rotateLeft*(m: var Mino) =
  let decedIndex = m.rotateIndex - 1
  m.rotateIndex = if decedIndex < 0:
    minos[m.minoIndex].len - 1
  else:
    decedIndex

